<html>
  <head>
  <link rel="stylesheet"
        href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.1/styles/default.min.css">

  <meta name="keywords" content="shyal beardsley, shyal.com, shyal, oliver, beardsley">
  <meta name="description" content="obsidian">
  <script async src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
  <script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    config: ["MMLorHTML.js"],
    jax: ["input/TeX", "output/HTML-CSS", "output/NativeMML"],
    extensions: ["MathMenu.js", "MathZoom.js"]
  });
  </script>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

<!--   <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script> -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/mermaid/8.5.2/mermaid.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.slim.js"></script>
    
    <link rel="stylesheet" href="/static/styles.css">
    <!-- <script src="/static/mermaid.min.js"></script> -->
    <link href="/static/lightbox.css" rel="stylesheet" />
    
    <title>obsidian - Shyal Beardsley</title>
    <style>
      pre { line-height: 125%; }
td.linenos pre { color: #000000; background-color: #f0f0f0; padding-left: 5px; padding-right: 5px; }
span.linenos { color: #000000; background-color: #f0f0f0; padding-left: 5px; padding-right: 5px; }
td.linenos pre.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }
span.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }
.highlight .hll { background-color: #ffffcc }
.highlight { background: #ffffff; }
.highlight .c { color: #888888 } /* Comment */
.highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */
.highlight .k { color: #008800; font-weight: bold } /* Keyword */
.highlight .ch { color: #888888 } /* Comment.Hashbang */
.highlight .cm { color: #888888 } /* Comment.Multiline */
.highlight .cp { color: #cc0000; font-weight: bold } /* Comment.Preproc */
.highlight .cpf { color: #888888 } /* Comment.PreprocFile */
.highlight .c1 { color: #888888 } /* Comment.Single */
.highlight .cs { color: #cc0000; font-weight: bold; background-color: #fff0f0 } /* Comment.Special */
.highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */
.highlight .ge { font-style: italic } /* Generic.Emph */
.highlight .gr { color: #aa0000 } /* Generic.Error */
.highlight .gh { color: #333333 } /* Generic.Heading */
.highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */
.highlight .go { color: #888888 } /* Generic.Output */
.highlight .gp { color: #555555 } /* Generic.Prompt */
.highlight .gs { font-weight: bold } /* Generic.Strong */
.highlight .gu { color: #666666 } /* Generic.Subheading */
.highlight .gt { color: #aa0000 } /* Generic.Traceback */
.highlight .kc { color: #008800; font-weight: bold } /* Keyword.Constant */
.highlight .kd { color: #008800; font-weight: bold } /* Keyword.Declaration */
.highlight .kn { color: #008800; font-weight: bold } /* Keyword.Namespace */
.highlight .kp { color: #008800 } /* Keyword.Pseudo */
.highlight .kr { color: #008800; font-weight: bold } /* Keyword.Reserved */
.highlight .kt { color: #888888; font-weight: bold } /* Keyword.Type */
.highlight .m { color: #0000DD; font-weight: bold } /* Literal.Number */
.highlight .s { color: #dd2200; background-color: #fff0f0 } /* Literal.String */
.highlight .na { color: #336699 } /* Name.Attribute */
.highlight .nb { color: #003388 } /* Name.Builtin */
.highlight .nc { color: #bb0066; font-weight: bold } /* Name.Class */
.highlight .no { color: #003366; font-weight: bold } /* Name.Constant */
.highlight .nd { color: #555555 } /* Name.Decorator */
.highlight .ne { color: #bb0066; font-weight: bold } /* Name.Exception */
.highlight .nf { color: #0066bb; font-weight: bold } /* Name.Function */
.highlight .nl { color: #336699; font-style: italic } /* Name.Label */
.highlight .nn { color: #bb0066; font-weight: bold } /* Name.Namespace */
.highlight .py { color: #336699; font-weight: bold } /* Name.Property */
.highlight .nt { color: #bb0066; font-weight: bold } /* Name.Tag */
.highlight .nv { color: #336699 } /* Name.Variable */
.highlight .ow { color: #008800 } /* Operator.Word */
.highlight .w { color: #bbbbbb } /* Text.Whitespace */
.highlight .mb { color: #0000DD; font-weight: bold } /* Literal.Number.Bin */
.highlight .mf { color: #0000DD; font-weight: bold } /* Literal.Number.Float */
.highlight .mh { color: #0000DD; font-weight: bold } /* Literal.Number.Hex */
.highlight .mi { color: #0000DD; font-weight: bold } /* Literal.Number.Integer */
.highlight .mo { color: #0000DD; font-weight: bold } /* Literal.Number.Oct */
.highlight .sa { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Affix */
.highlight .sb { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Backtick */
.highlight .sc { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Char */
.highlight .dl { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Delimiter */
.highlight .sd { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Doc */
.highlight .s2 { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Double */
.highlight .se { color: #0044dd; background-color: #fff0f0 } /* Literal.String.Escape */
.highlight .sh { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Heredoc */
.highlight .si { color: #3333bb; background-color: #fff0f0 } /* Literal.String.Interpol */
.highlight .sx { color: #22bb22; background-color: #f0fff0 } /* Literal.String.Other */
.highlight .sr { color: #008800; background-color: #fff0ff } /* Literal.String.Regex */
.highlight .s1 { color: #dd2200; background-color: #fff0f0 } /* Literal.String.Single */
.highlight .ss { color: #aa6600; background-color: #fff0f0 } /* Literal.String.Symbol */
.highlight .bp { color: #003388 } /* Name.Builtin.Pseudo */
.highlight .fm { color: #0066bb; font-weight: bold } /* Name.Function.Magic */
.highlight .vc { color: #336699 } /* Name.Variable.Class */
.highlight .vg { color: #dd7700 } /* Name.Variable.Global */
.highlight .vi { color: #3333bb } /* Name.Variable.Instance */
.highlight .vm { color: #336699 } /* Name.Variable.Magic */
.highlight .il { color: #0000DD; font-weight: bold } /* Literal.Number.Integer.Long */
      

      .MathJax_Display{
        /*text-align: left !important;*/
        margin: 0 !important;
      }

      pre {
      /*line-height: 1em;*/
      white-space: pre-wrap;       /* css-3 */
      white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
      white-space: -pre-wrap;      /* Opera 4-6 */
      white-space: -o-pre-wrap;    /* Opera 7 */
      word-wrap: break-word;       /* Internet Explorer 5.5+ */
      }

      div.mermaid {
        max-width: 500px;
      }
  
      body {
        text-align: left !important;
        margin: 0px;
        padding: 0px;
      }

      table {
        border-collapse: collapse;
        width: 100%;
      }

      .lineno {
        margin-right: 10px;
        color: #a5b4a3;
      }

      .linenodiv {
        border-left: 2px solid #69c;
        color: #89ac9a;
        background-color: #f5f7f9 !important;
      }

      .codehilitetable td {
        background-color: #f5f7f9;
      }

      th, td {
        text-align: left;
      }

      tr:nth-child(even) {background-color: #f2f2f2;}

      img {
        max-width: 50em;
        max-height: 30em;
        display: block;
        margin-left: auto;
        margin-right: auto;
        padding: 2em 1em;
      }

      .text-center{
        text-align: center;
      }

      main,
      footer,
      .narrow {
        font-family: "Roboto", "Helvetica", "Arial", sans-serif;
        margin: 0 auto;
        max-width: 50em;
        line-height: 1.5;
        padding: 2em 1em;
        color: #566b78;
      }

      .lb-image {
        background: white;
      }

      div {
        padding: 0px;
        margin: 0px;
      }

      code,
      pre {
        background: #f7f9fb;
      }

      .linenodiv {
        width: 10px;
        padding-right: 0px;
      }

      h2 {
        margin-top: 0.5em;
        padding-top: 0.5em;
      }

      h1,
      h2,
      strong {
        color: #333;
      }

      a {
        color: #e81c4f;
      }
    </style>
  </head>
  <body>
    
    <main>

    <!-- <img src='/Attachments/me.png' height='150px'> -->

    
    <div><h1 class='main-title'>obsidian</h1></div>
     

    
    <a href="javascript:history.back()">‚Üê</a>
    <a href='/'>üè†</a>
     
    <!-- if has_fences -->
    <!-- <div><a href='/black'><img src='/Attachments/black.svg'/></a></div> -->
    <!--  end  -->
    <p>I've discovered an incredible tool, <a href="https://obsidian.md/">Obsidian</a>, on one of my favourite technology forums, <a href="https://news.ycombinator.com/item?id=23324598">Hacker News</a>.</p>
<p><img alt="obsidian.png" src="/Attachments/obsidian.png" /></p>
<p>Holy moly. Love at first byte. I really love the graph view, and the keyboard bindings which enable me to just jump around in a graph-based, non-linear way.</p>
<p>That's really fantastic, since thought <em>is</em> graph-based, and non-linear. Jumping from one thing to another is a very normal default way of thinking. It's important to respect thought's chaotic state--and to capture it properly--and only then try to make it linear.</p>
<p>So i quickly wrote a <strong>tornadoweb</strong> server, to serve up my obsidian cluster as a site. This will of course evolve over time, but currently it looks like this:</p>
<div class="highlight"><pre><span></span><span class="linenos">  1</span><span class="kn">import</span> <span class="nn">os</span>
<span class="linenos">  2</span><span class="kn">import</span> <span class="nn">re</span>
<span class="linenos">  3</span>
<span class="linenos">  4</span><span class="kn">import</span> <span class="nn">tornado.ioloop</span>
<span class="linenos">  5</span><span class="kn">import</span> <span class="nn">tornado.web</span>
<span class="linenos">  6</span><span class="kn">from</span> <span class="nn">tornado.template</span> <span class="kn">import</span> <span class="n">Template</span>
<span class="linenos">  7</span>
<span class="linenos">  8</span><span class="kn">from</span> <span class="nn">markdown</span> <span class="kn">import</span> <span class="n">markdown</span>
<span class="linenos">  9</span><span class="kn">from</span> <span class="nn">glob</span> <span class="kn">import</span> <span class="n">glob</span>
<span class="linenos"> 10</span><span class="kn">from</span> <span class="nn">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>
<span class="linenos"> 11</span>
<span class="linenos"> 12</span><span class="n">extensions</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;fenced_code&#39;</span><span class="p">,</span> <span class="s1">&#39;codehilite&#39;</span><span class="p">,</span> <span class="s1">&#39;tables&#39;</span><span class="p">,</span> <span class="s1">&#39;footnotes&#39;</span><span class="p">,</span> <span class="s1">&#39;admonition&#39;</span><span class="p">,</span> <span class="s1">&#39;nl2br&#39;</span><span class="p">,</span> <span class="s1">&#39;toc&#39;</span><span class="p">]</span>
<span class="linenos"> 13</span>
<span class="linenos"> 14</span><span class="n">extension_configs</span> <span class="o">=</span> <span class="p">{</span>
<span class="linenos"> 15</span>    <span class="s1">&#39;codehilite&#39;</span><span class="p">:</span> <span class="p">{</span>
<span class="linenos"> 16</span>        <span class="s1">&#39;linenums&#39;</span><span class="p">:</span> <span class="kc">False</span><span class="p">,</span> <span class="c1"># look at CSS before enablings this</span>
<span class="linenos"> 17</span>    <span class="p">}</span>
<span class="linenos"> 18</span><span class="p">}</span>
<span class="linenos"> 19</span>
<span class="linenos"> 20</span><span class="k">class</span> <span class="nc">Note</span><span class="p">(</span><span class="nb">str</span><span class="p">):</span>
<span class="linenos"> 21</span>
<span class="linenos"> 22</span>    <span class="nd">@property</span>
<span class="linenos"> 23</span>    <span class="k">def</span> <span class="nf">path</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="linenos"> 24</span>        <span class="k">for</span> <span class="n">sep</span> <span class="ow">in</span> <span class="p">[</span><span class="s1">&#39;-&#39;</span><span class="p">,</span> <span class="s1">&#39;_&#39;</span><span class="p">]:</span>
<span class="linenos"> 25</span>            <span class="n">path</span> <span class="o">=</span> <span class="sa">f</span><span class="s1">&#39;./</span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">sep</span><span class="p">,</span> <span class="s2">&quot; &quot;</span><span class="p">)</span><span class="si">}</span><span class="s1">.md&#39;</span>
<span class="linenos"> 26</span>            <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>
<span class="linenos"> 27</span>                <span class="k">return</span> <span class="n">path</span>
<span class="linenos"> 28</span>
<span class="linenos"> 29</span>    <span class="nd">@property</span>
<span class="linenos"> 30</span>    <span class="k">def</span> <span class="nf">name</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="linenos"> 31</span>        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="bp">self</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">)</span>
<span class="linenos"> 32</span>
<span class="linenos"> 33</span>    <span class="nd">@property</span>
<span class="linenos"> 34</span>    <span class="k">def</span> <span class="nf">href</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="linenos"> 35</span>        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="bp">self</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span>
<span class="linenos"> 36</span>
<span class="linenos"> 37</span><span class="k">class</span> <span class="nc">MainHandler</span><span class="p">(</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">):</span>
<span class="linenos"> 38</span>    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="linenos"> 39</span>        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;./index.md&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
<span class="linenos"> 40</span>            <span class="n">t</span> <span class="o">=</span> <span class="n">Template</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
<span class="linenos"> 41</span>            <span class="n">dailies</span> <span class="o">=</span> <span class="p">[]</span>
<span class="linenos"> 42</span>            <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;dailies/*-*-*.md&#39;</span><span class="p">),</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">):</span>
<span class="linenos"> 43</span>                <span class="n">dailies</span><span class="o">.</span><span class="n">append</span><span class="p">({</span>
<span class="linenos"> 44</span>                    <span class="s1">&#39;name&#39;</span><span class="p">:</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">d</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
<span class="linenos"> 45</span>                <span class="p">})</span>
<span class="linenos"> 46</span>            <span class="n">blog_posts</span> <span class="o">=</span> <span class="p">[]</span>
<span class="linenos"> 47</span>            <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;blog/*.md&#39;</span><span class="p">),</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">):</span>
<span class="linenos"> 48</span>                <span class="n">blog_posts</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">Note</span><span class="p">(</span><span class="n">d</span><span class="p">))</span>
<span class="linenos"> 49</span>            <span class="bp">self</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">markdown</span><span class="p">(</span><span class="n">t</span><span class="o">.</span><span class="n">generate</span><span class="p">(</span><span class="n">dailies</span><span class="o">=</span><span class="n">dailies</span><span class="p">,</span> <span class="n">blog_posts</span><span class="o">=</span><span class="n">blog_posts</span><span class="p">)</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">),</span> <span class="n">extensions</span><span class="o">=</span><span class="n">extensions</span><span class="p">,</span> <span class="n">extension_configs</span><span class="o">=</span><span class="n">extension_configs</span><span class="p">))</span>
<span class="linenos"> 50</span>
<span class="linenos"> 51</span><span class="k">def</span> <span class="nf">get_notes</span><span class="p">():</span>
<span class="linenos"> 52</span>    <span class="n">notes</span> <span class="o">=</span> <span class="p">{}</span>
<span class="linenos"> 53</span>    <span class="k">for</span> <span class="n">path</span> <span class="ow">in</span> <span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">x</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">Path</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">rglob</span><span class="p">(</span><span class="s1">&#39;*.md&#39;</span><span class="p">)):</span>
<span class="linenos"> 54</span>        <span class="n">path</span><span class="p">,</span> <span class="n">file</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
<span class="linenos"> 55</span>        <span class="n">notes</span><span class="p">[</span><span class="n">file</span><span class="p">]</span> <span class="o">=</span> <span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">path</span> <span class="ow">or</span> <span class="s2">&quot;.&quot;</span><span class="si">}</span><span class="s1">/</span><span class="si">{</span><span class="n">file</span><span class="si">}</span><span class="s1">&#39;</span>
<span class="linenos"> 56</span>    <span class="k">return</span> <span class="n">notes</span>
<span class="linenos"> 57</span>
<span class="linenos"> 58</span><span class="k">class</span> <span class="nc">PageHandler</span><span class="p">(</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">):</span>
<span class="linenos"> 59</span>    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">):</span>
<span class="linenos"> 60</span>        <span class="n">notes</span> <span class="o">=</span> <span class="n">get_notes</span><span class="p">()</span>
<span class="linenos"> 61</span>        <span class="n">note</span> <span class="o">=</span> <span class="n">Note</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
<span class="linenos"> 62</span>        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">note</span><span class="o">.</span><span class="n">path</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
<span class="linenos"> 63</span>            <span class="n">content</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
<span class="linenos"> 64</span>            <span class="n">content</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fix_link</span><span class="p">(</span><span class="n">content</span><span class="p">,</span> <span class="n">notes</span><span class="p">)</span>
<span class="linenos"> 65</span>            <span class="n">content</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fix_attachment</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
<span class="linenos"> 66</span>            <span class="n">rendered_markdown</span> <span class="o">=</span> <span class="n">markdown</span><span class="p">(</span><span class="n">content</span><span class="p">,</span> <span class="n">extensions</span><span class="o">=</span><span class="n">extensions</span><span class="p">,</span> <span class="n">extension_configs</span><span class="o">=</span><span class="n">extension_configs</span><span class="p">)</span>
<span class="linenos"> 67</span>            <span class="n">t</span> <span class="o">=</span> <span class="n">Template</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="s1">&#39;base.html&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
<span class="linenos"> 68</span>            <span class="n">rendered</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">generate</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="n">note</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">content</span><span class="o">=</span><span class="n">rendered_markdown</span><span class="p">)</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="linenos"> 69</span>            <span class="bp">self</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">rendered</span><span class="p">)</span>
<span class="linenos"> 70</span>
<span class="linenos"> 71</span>    <span class="k">def</span> <span class="nf">fix_link</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">content</span><span class="p">,</span> <span class="n">notes</span><span class="p">):</span>
<span class="linenos"> 72</span>        <span class="sd">&quot;&quot;&quot;</span>
<span class="linenos"> 73</span><span class="sd">        Finds links in the document, e.g [[this is a link]]</span>
<span class="linenos"> 74</span><span class="sd">        and replaces them with the correct syntax.</span>
<span class="linenos"> 75</span><span class="sd">        &quot;&quot;&quot;</span>
<span class="linenos"> 76</span>        <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s2">&quot;\[\[([^\]]+)\]\]&quot;</span><span class="p">,</span> <span class="n">content</span><span class="p">):</span>
<span class="linenos"> 77</span>            <span class="n">link</span> <span class="o">=</span> <span class="n">notes</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="kc">None</span><span class="p">)</span>
<span class="linenos"> 78</span>            <span class="k">if</span> <span class="n">link</span> <span class="ow">and</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">link</span><span class="si">}</span><span class="s1">.md&#39;</span><span class="p">):</span>
<span class="linenos"> 79</span>                <span class="n">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;[[</span><span class="si">{</span><span class="n">m</span><span class="si">}</span><span class="s1">]]&#39;</span><span class="p">,</span> <span class="sa">f</span><span class="s2">&quot;[</span><span class="si">{</span><span class="n">m</span><span class="si">}</span><span class="s2">](/</span><span class="si">{</span><span class="n">link</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">)&quot;</span><span class="p">)</span>
<span class="linenos"> 80</span>        <span class="k">return</span> <span class="n">content</span>
<span class="linenos"> 81</span>
<span class="linenos"> 82</span>    <span class="k">def</span> <span class="nf">fix_attachment</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">content</span><span class="p">):</span>
<span class="linenos"> 83</span>        <span class="n">matches</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">finditer</span><span class="p">(</span><span class="sa">r</span><span class="s2">&quot;!\[\[(.*)\]\]&quot;</span><span class="p">,</span> <span class="n">content</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">MULTILINE</span><span class="p">)</span>
<span class="linenos"> 84</span>        <span class="k">for</span> <span class="n">matchNum</span><span class="p">,</span> <span class="n">match</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">matches</span><span class="p">,</span> <span class="n">start</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
<span class="linenos"> 85</span>            <span class="n">tag</span><span class="p">,</span> <span class="n">filename</span> <span class="o">=</span> <span class="n">match</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span> <span class="n">match</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="linenos"> 86</span>            <span class="n">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">tag</span><span class="p">,</span> <span class="sa">f</span><span class="s1">&#39;![</span><span class="si">{</span><span class="n">filename</span><span class="si">}</span><span class="s1">](/Attachments/</span><span class="si">{</span><span class="n">filename</span><span class="si">}</span><span class="s1">)&#39;</span><span class="p">)</span>
<span class="linenos"> 87</span>        <span class="k">return</span> <span class="n">content</span>
<span class="linenos"> 88</span>
<span class="linenos"> 89</span>
<span class="linenos"> 90</span><span class="k">def</span> <span class="nf">make_app</span><span class="p">():</span>
<span class="linenos"> 91</span>    <span class="k">return</span> <span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">Application</span><span class="p">([</span>
<span class="linenos"> 92</span>        <span class="p">(</span><span class="sa">r</span><span class="s2">&quot;/&quot;</span><span class="p">,</span> <span class="n">MainHandler</span><span class="p">),</span>
<span class="linenos"> 93</span>        <span class="p">(</span><span class="sa">r</span><span class="s2">&quot;/(favicon\.ico)&quot;</span><span class="p">,</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">StaticFileHandler</span><span class="p">,</span> <span class="p">{</span><span class="s2">&quot;path&quot;</span><span class="p">:</span> <span class="s2">&quot;./static&quot;</span><span class="p">},),</span>
<span class="linenos"> 94</span>        <span class="p">(</span><span class="sa">r</span><span class="s2">&quot;/static/(.*)&quot;</span><span class="p">,</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">StaticFileHandler</span><span class="p">,</span> <span class="p">{</span><span class="s2">&quot;path&quot;</span><span class="p">:</span> <span class="s2">&quot;./static&quot;</span><span class="p">},),</span>
<span class="linenos"> 95</span>        <span class="p">(</span><span class="sa">r</span><span class="s2">&quot;/Attachments/(.*)&quot;</span><span class="p">,</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">StaticFileHandler</span><span class="p">,</span> <span class="p">{</span><span class="s2">&quot;path&quot;</span><span class="p">:</span> <span class="s2">&quot;./Attachments&quot;</span><span class="p">},),</span>
<span class="linenos"> 96</span>        <span class="p">(</span><span class="sa">r</span><span class="s2">&quot;/(.*)&quot;</span><span class="p">,</span> <span class="n">PageHandler</span><span class="p">),</span>
<span class="linenos"> 97</span>    <span class="p">],</span> <span class="n">debug</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="linenos"> 98</span>
<span class="linenos"> 99</span><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
<span class="linenos">100</span>    <span class="n">app</span> <span class="o">=</span> <span class="n">make_app</span><span class="p">()</span>
<span class="linenos">101</span>    <span class="n">app</span><span class="o">.</span><span class="n">listen</span><span class="p">(</span><span class="mi">8282</span><span class="p">)</span>
<span class="linenos">102</span>    <span class="n">tornado</span><span class="o">.</span><span class="n">ioloop</span><span class="o">.</span><span class="n">IOLoop</span><span class="o">.</span><span class="n">current</span><span class="p">()</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
</pre></div>

<p>Sorry if this looks like, well, a big unorganised chunk of code. :) But if you run it in your obsidian directory, with a bit of tweaking, you should get it to serve up your cluster as a site.</p>
<p><img alt="obsidian_definition.png" src="/Attachments/obsidian_definition.png" /></p>
<p>And to make things even more trippy: it turns out Obsidian is the exact English equivalent to my Sanskrit name <em>Shyal</em>. If that's not a sign, then i don't know what is. Adopted! And i am now thinking about how to just start using Obsidian for everthing, including storing of my knowledge, thing i'm currently doing with <a href="https://apps.ankiweb.net/">Anki</a>.</p>
<p>Let's see if i can move my old blog articles, e.g [[hitting-the-front-page-of-hacker-news-and-reddit]]</p>
<hr />
<p>Playground:</p>
<p><strong>admonitions</strong></p>
<div class="admonition important">
<p>This is an admonition box without a title.</p>
</div>
<div class="admonition danger">
<p class="admonition-title">Don't try this at home</p>
<p>blah blah </p>
</div>
<p><strong>latex</strong>*</p>
<p>
<script type="math/tex; mode=display">n(n+1)/2</script>
</p>
<p><strong>Footnotes</strong></p>
<p>Footnotes<sup id="fnref:1"><a class="footnote-ref" href="#fn:1">1</a></sup> have a label<sup id="fnref:@#$%"><a class="footnote-ref" href="#fn:@#$%">2</a></sup> and the footnote's content.</p>
<div class="footnote">
<hr />
<ol>
<li id="fn:1">
<p>This is a footnote content.&#160;<a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text">&#8617;</a></p>
</li>
<li id="fn:@#$%">
<p>A footnote on the label: "@#$%"&#160;<a class="footnote-backref" href="#fnref:@#$%" title="Jump back to footnote 2 in the text">&#8617;</a></p>
</li>
</ol>
</div>
    </main>
    
    <footer>
        All content rights reserved Shyal Beardsley 2020.
    </footer>
    
  </body>


<script>
 var i = 0;
 $("img").each(function() {  
   imgsrc = this.src;

  if (imgsrc.includes('.mp4')){
    $(this).replaceWith($("<video width='640' height='480' controls> <source src='"+imgsrc+"' type='video/mp4'></video>"))
   }
   else{
     $(this).wrap('<a href="'+this.src+'" data-lightbox="image-'+i+'" data-title=""></a>');
   }
   i += 1;
  });  
</script>

<script src="/static/lightbox.js"></script>
<script>
lightbox.option({
  'resizeDuration': 200,
  'wrapAround': true,
  'fitImagesInViewport': true
})
</script>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-78427660-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'UA-78427660-1');
</script>

</html>